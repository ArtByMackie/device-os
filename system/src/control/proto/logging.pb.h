/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9 at Fri Jun 21 13:51:28 2019. */

#ifndef PB_PARTICLE_CTRL_LOGGING_LOGGING_PB_H_INCLUDED
#define PB_PARTICLE_CTRL_LOGGING_LOGGING_PB_H_INCLUDED
#include <pb.h>

#include "extensions.pb.h"

#include "common.pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _particle_ctrl_logging_LogLevel {
    particle_ctrl_logging_LogLevel_INVALID_LOG_LEVEL = 0,
    particle_ctrl_logging_LogLevel_ALL = 1,
    particle_ctrl_logging_LogLevel_TRACE = 1,
    particle_ctrl_logging_LogLevel_INFO = 30,
    particle_ctrl_logging_LogLevel_WARN = 40,
    particle_ctrl_logging_LogLevel_ERROR = 50,
    particle_ctrl_logging_LogLevel_NONE = 70
} particle_ctrl_logging_LogLevel;
#define _particle_ctrl_logging_LogLevel_MIN particle_ctrl_logging_LogLevel_INVALID_LOG_LEVEL
#define _particle_ctrl_logging_LogLevel_MAX particle_ctrl_logging_LogLevel_NONE
#define _particle_ctrl_logging_LogLevel_ARRAYSIZE ((particle_ctrl_logging_LogLevel)(particle_ctrl_logging_LogLevel_NONE+1))

typedef enum _particle_ctrl_logging_LogHandlerType {
    particle_ctrl_logging_LogHandlerType_INVALID_LOG_HANDLER_TYPE = 0,
    particle_ctrl_logging_LogHandlerType_DEFAULT_STREAM_HANDLER = 1,
    particle_ctrl_logging_LogHandlerType_JSON_STREAM_HANDLER = 2
} particle_ctrl_logging_LogHandlerType;
#define _particle_ctrl_logging_LogHandlerType_MIN particle_ctrl_logging_LogHandlerType_INVALID_LOG_HANDLER_TYPE
#define _particle_ctrl_logging_LogHandlerType_MAX particle_ctrl_logging_LogHandlerType_JSON_STREAM_HANDLER
#define _particle_ctrl_logging_LogHandlerType_ARRAYSIZE ((particle_ctrl_logging_LogHandlerType)(particle_ctrl_logging_LogHandlerType_JSON_STREAM_HANDLER+1))

typedef enum _particle_ctrl_logging_StreamType {
    particle_ctrl_logging_StreamType_INVALID_STREAM_TYPE = 0,
    particle_ctrl_logging_StreamType_USB_SERIAL_STREAM = 1,
    particle_ctrl_logging_StreamType_HW_SERIAL_STREAM = 2,
    particle_ctrl_logging_StreamType_LOG_FILE_STREAM = 3
} particle_ctrl_logging_StreamType;
#define _particle_ctrl_logging_StreamType_MIN particle_ctrl_logging_StreamType_INVALID_STREAM_TYPE
#define _particle_ctrl_logging_StreamType_MAX particle_ctrl_logging_StreamType_LOG_FILE_STREAM
#define _particle_ctrl_logging_StreamType_ARRAYSIZE ((particle_ctrl_logging_StreamType)(particle_ctrl_logging_StreamType_LOG_FILE_STREAM+1))

/* Struct definitions */
typedef struct _particle_ctrl_logging_AddLogHandlerReply {
    char dummy_field;
/* @@protoc_insertion_point(struct:particle_ctrl_logging_AddLogHandlerReply) */
} particle_ctrl_logging_AddLogHandlerReply;

typedef struct _particle_ctrl_logging_ClearLogFileReply {
    char dummy_field;
/* @@protoc_insertion_point(struct:particle_ctrl_logging_ClearLogFileReply) */
} particle_ctrl_logging_ClearLogFileReply;

typedef struct _particle_ctrl_logging_ClearLogFileRequest {
    char dummy_field;
/* @@protoc_insertion_point(struct:particle_ctrl_logging_ClearLogFileRequest) */
} particle_ctrl_logging_ClearLogFileRequest;

typedef struct _particle_ctrl_logging_GetLogFileInfoRequest {
    char dummy_field;
/* @@protoc_insertion_point(struct:particle_ctrl_logging_GetLogFileInfoRequest) */
} particle_ctrl_logging_GetLogFileInfoRequest;

typedef struct _particle_ctrl_logging_GetLogHandlersReply {
    pb_callback_t handlers;
/* @@protoc_insertion_point(struct:particle_ctrl_logging_GetLogHandlersReply) */
} particle_ctrl_logging_GetLogHandlersReply;

typedef struct _particle_ctrl_logging_GetLogHandlersReply_Handler {
    pb_callback_t id;
/* @@protoc_insertion_point(struct:particle_ctrl_logging_GetLogHandlersReply_Handler) */
} particle_ctrl_logging_GetLogHandlersReply_Handler;

typedef struct _particle_ctrl_logging_GetLogHandlersRequest {
    char dummy_field;
/* @@protoc_insertion_point(struct:particle_ctrl_logging_GetLogHandlersRequest) */
} particle_ctrl_logging_GetLogHandlersRequest;

typedef struct _particle_ctrl_logging_ReadLogFileReply {
    pb_callback_t data;
/* @@protoc_insertion_point(struct:particle_ctrl_logging_ReadLogFileReply) */
} particle_ctrl_logging_ReadLogFileReply;

typedef struct _particle_ctrl_logging_RemoveLogHandlerReply {
    char dummy_field;
/* @@protoc_insertion_point(struct:particle_ctrl_logging_RemoveLogHandlerReply) */
} particle_ctrl_logging_RemoveLogHandlerReply;

typedef struct _particle_ctrl_logging_RemoveLogHandlerRequest {
    pb_callback_t id;
/* @@protoc_insertion_point(struct:particle_ctrl_logging_RemoveLogHandlerRequest) */
} particle_ctrl_logging_RemoveLogHandlerRequest;

typedef struct _particle_ctrl_logging_GetLogFileInfoReply {
    uint32_t trunc_count;
    uint32_t file_size;
    uint32_t max_file_size;
    uint32_t max_read_size;
/* @@protoc_insertion_point(struct:particle_ctrl_logging_GetLogFileInfoReply) */
} particle_ctrl_logging_GetLogFileInfoReply;

typedef struct _particle_ctrl_logging_LogFilter {
    pb_callback_t category;
    particle_ctrl_logging_LogLevel level;
/* @@protoc_insertion_point(struct:particle_ctrl_logging_LogFilter) */
} particle_ctrl_logging_LogFilter;

typedef struct _particle_ctrl_logging_ReadLogFileRequest {
    uint32_t offset;
    uint32_t size;
/* @@protoc_insertion_point(struct:particle_ctrl_logging_ReadLogFileRequest) */
} particle_ctrl_logging_ReadLogFileRequest;

typedef struct _particle_ctrl_logging_SerialStreamParams {
    uint32_t index;
    uint32_t baud_rate;
/* @@protoc_insertion_point(struct:particle_ctrl_logging_SerialStreamParams) */
} particle_ctrl_logging_SerialStreamParams;

typedef struct _particle_ctrl_logging_AddLogHandlerRequest {
    pb_callback_t id;
    particle_ctrl_logging_LogHandlerType handler_type;
    particle_ctrl_logging_LogLevel level;
    pb_callback_t filters;
    particle_ctrl_logging_StreamType stream_type;
    pb_size_t which_stream_params;
    union {
        particle_ctrl_logging_SerialStreamParams serial;
    } stream_params;
/* @@protoc_insertion_point(struct:particle_ctrl_logging_AddLogHandlerRequest) */
} particle_ctrl_logging_AddLogHandlerRequest;

/* Default values for struct fields */

/* Initializer values for message structs */
#define particle_ctrl_logging_LogFilter_init_default {{{NULL}, NULL}, (particle_ctrl_logging_LogLevel)0}
#define particle_ctrl_logging_SerialStreamParams_init_default {0, 0}
#define particle_ctrl_logging_AddLogHandlerRequest_init_default {{{NULL}, NULL}, (particle_ctrl_logging_LogHandlerType)0, (particle_ctrl_logging_LogLevel)0, {{NULL}, NULL}, (particle_ctrl_logging_StreamType)0, 0, {particle_ctrl_logging_SerialStreamParams_init_default}}
#define particle_ctrl_logging_AddLogHandlerReply_init_default {0}
#define particle_ctrl_logging_RemoveLogHandlerRequest_init_default {{{NULL}, NULL}}
#define particle_ctrl_logging_RemoveLogHandlerReply_init_default {0}
#define particle_ctrl_logging_GetLogHandlersRequest_init_default {0}
#define particle_ctrl_logging_GetLogHandlersReply_init_default {{{NULL}, NULL}}
#define particle_ctrl_logging_GetLogHandlersReply_Handler_init_default {{{NULL}, NULL}}
#define particle_ctrl_logging_GetLogFileInfoRequest_init_default {0}
#define particle_ctrl_logging_GetLogFileInfoReply_init_default {0, 0, 0, 0}
#define particle_ctrl_logging_ReadLogFileRequest_init_default {0, 0}
#define particle_ctrl_logging_ReadLogFileReply_init_default {{{NULL}, NULL}}
#define particle_ctrl_logging_ClearLogFileRequest_init_default {0}
#define particle_ctrl_logging_ClearLogFileReply_init_default {0}
#define particle_ctrl_logging_LogFilter_init_zero {{{NULL}, NULL}, (particle_ctrl_logging_LogLevel)0}
#define particle_ctrl_logging_SerialStreamParams_init_zero {0, 0}
#define particle_ctrl_logging_AddLogHandlerRequest_init_zero {{{NULL}, NULL}, (particle_ctrl_logging_LogHandlerType)0, (particle_ctrl_logging_LogLevel)0, {{NULL}, NULL}, (particle_ctrl_logging_StreamType)0, 0, {particle_ctrl_logging_SerialStreamParams_init_zero}}
#define particle_ctrl_logging_AddLogHandlerReply_init_zero {0}
#define particle_ctrl_logging_RemoveLogHandlerRequest_init_zero {{{NULL}, NULL}}
#define particle_ctrl_logging_RemoveLogHandlerReply_init_zero {0}
#define particle_ctrl_logging_GetLogHandlersRequest_init_zero {0}
#define particle_ctrl_logging_GetLogHandlersReply_init_zero {{{NULL}, NULL}}
#define particle_ctrl_logging_GetLogHandlersReply_Handler_init_zero {{{NULL}, NULL}}
#define particle_ctrl_logging_GetLogFileInfoRequest_init_zero {0}
#define particle_ctrl_logging_GetLogFileInfoReply_init_zero {0, 0, 0, 0}
#define particle_ctrl_logging_ReadLogFileRequest_init_zero {0, 0}
#define particle_ctrl_logging_ReadLogFileReply_init_zero {{{NULL}, NULL}}
#define particle_ctrl_logging_ClearLogFileRequest_init_zero {0}
#define particle_ctrl_logging_ClearLogFileReply_init_zero {0}

/* Field tags (for use in manual encoding/decoding) */
#define particle_ctrl_logging_GetLogHandlersReply_handlers_tag 1
#define particle_ctrl_logging_GetLogHandlersReply_Handler_id_tag 1
#define particle_ctrl_logging_ReadLogFileReply_data_tag 1
#define particle_ctrl_logging_RemoveLogHandlerRequest_id_tag 1
#define particle_ctrl_logging_GetLogFileInfoReply_trunc_count_tag 1
#define particle_ctrl_logging_GetLogFileInfoReply_file_size_tag 2
#define particle_ctrl_logging_GetLogFileInfoReply_max_file_size_tag 3
#define particle_ctrl_logging_GetLogFileInfoReply_max_read_size_tag 4
#define particle_ctrl_logging_LogFilter_category_tag 1
#define particle_ctrl_logging_LogFilter_level_tag 2
#define particle_ctrl_logging_ReadLogFileRequest_offset_tag 1
#define particle_ctrl_logging_ReadLogFileRequest_size_tag 2
#define particle_ctrl_logging_SerialStreamParams_index_tag 1
#define particle_ctrl_logging_SerialStreamParams_baud_rate_tag 2
#define particle_ctrl_logging_AddLogHandlerRequest_serial_tag 6
#define particle_ctrl_logging_AddLogHandlerRequest_id_tag 1
#define particle_ctrl_logging_AddLogHandlerRequest_handler_type_tag 2
#define particle_ctrl_logging_AddLogHandlerRequest_level_tag 3
#define particle_ctrl_logging_AddLogHandlerRequest_filters_tag 4
#define particle_ctrl_logging_AddLogHandlerRequest_stream_type_tag 5

/* Struct field encoding specification for nanopb */
extern const pb_field_t particle_ctrl_logging_LogFilter_fields[3];
extern const pb_field_t particle_ctrl_logging_SerialStreamParams_fields[3];
extern const pb_field_t particle_ctrl_logging_AddLogHandlerRequest_fields[7];
extern const pb_field_t particle_ctrl_logging_AddLogHandlerReply_fields[1];
extern const pb_field_t particle_ctrl_logging_RemoveLogHandlerRequest_fields[2];
extern const pb_field_t particle_ctrl_logging_RemoveLogHandlerReply_fields[1];
extern const pb_field_t particle_ctrl_logging_GetLogHandlersRequest_fields[1];
extern const pb_field_t particle_ctrl_logging_GetLogHandlersReply_fields[2];
extern const pb_field_t particle_ctrl_logging_GetLogHandlersReply_Handler_fields[2];
extern const pb_field_t particle_ctrl_logging_GetLogFileInfoRequest_fields[1];
extern const pb_field_t particle_ctrl_logging_GetLogFileInfoReply_fields[5];
extern const pb_field_t particle_ctrl_logging_ReadLogFileRequest_fields[3];
extern const pb_field_t particle_ctrl_logging_ReadLogFileReply_fields[2];
extern const pb_field_t particle_ctrl_logging_ClearLogFileRequest_fields[1];
extern const pb_field_t particle_ctrl_logging_ClearLogFileReply_fields[1];

/* Maximum encoded size of messages (where known) */
/* particle_ctrl_logging_LogFilter_size depends on runtime parameters */
#define particle_ctrl_logging_SerialStreamParams_size 12
/* particle_ctrl_logging_AddLogHandlerRequest_size depends on runtime parameters */
#define particle_ctrl_logging_AddLogHandlerReply_size 0
/* particle_ctrl_logging_RemoveLogHandlerRequest_size depends on runtime parameters */
#define particle_ctrl_logging_RemoveLogHandlerReply_size 0
#define particle_ctrl_logging_GetLogHandlersRequest_size 0
/* particle_ctrl_logging_GetLogHandlersReply_size depends on runtime parameters */
/* particle_ctrl_logging_GetLogHandlersReply_Handler_size depends on runtime parameters */
#define particle_ctrl_logging_GetLogFileInfoRequest_size 0
#define particle_ctrl_logging_GetLogFileInfoReply_size 24
#define particle_ctrl_logging_ReadLogFileRequest_size 12
/* particle_ctrl_logging_ReadLogFileReply_size depends on runtime parameters */
#define particle_ctrl_logging_ClearLogFileRequest_size 0
#define particle_ctrl_logging_ClearLogFileReply_size 0

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define LOGGING_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
